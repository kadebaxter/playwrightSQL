truncate table performer restart identity cascade;
	truncate table customer restart identity cascade;
	truncate table complex restart identity cascade;
	truncate table concession_item restart identity cascade;
truncate table purchase_concession restart identity cascade;
truncate table seat restart identity cascade;
truncate table purchase restart identity cascade;

do $$
declare
	i int;
	j int;
	k int;
	l int;
	m int;
	customer_count int;
	next_date timestamp = now() + interval '2 weeks';
begin
	call populate_theatre_complex();
	raise notice 'Populate theatre done';
	call create_performers_and_certifications();
	raise notice 'Create performers and certs done';
end; $$

do $$
declare
	i int;
	j int;
	k int;
	l int;
	m int;
	customer_count int;
	next_date timestamp = now() + interval '2 weeks';
begin
	call make_template_shifts();
	for i in 1..16 loop
		call make_actual_performer_schedule(next_date::timestamp); --one week at a time
		next_date = next_date + interval '1 week';
	end loop;
	raise notice 'Actual schedules done';
end; $$

--edited
do $$
declare
	i int;
	j int;
	k int;
	l int;
	m int;
	customer_count int;
	next_date timestamp = now() + interval '2 weeks';
begin
	call load_concession_items();
	for i in 1..150 loop 
	begin
		for j in 1..1000 loop
			call generate_random_conc_sale();
		end loop;
		commit;
	end;
	raise notice 'Finished %K rows', i;
	end loop;
	raise notice 'Concession sales done';
end; $$

--edited
do $$
declare
	i int;
	j int;
	k int;
	l int;
	m int;
	next_date timestamp = now() + interval '2 weeks';
begin
	for k in 1..3 loop
		call generate_new_seats(k);
	end loop;
	commit;
	for l in 1..100 loop
		call add_random_customer();
	end loop;
	commit;
	raise notice 'Finished seats and customers';
	call initialize_tickets(250, 700000);
	raise notice 'Ticket sales done';
end; $$